{"ast":null,"code":"var _jsxFileName = \"/home/fred/React/pokemons/src/pages/Login.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService';\n\nconst Login = () => {\n  const history = useHistory();\n  const [form, setForm] = useState({\n    username: {\n      value: ''\n    },\n    password: {\n      value: ''\n    }\n  });\n  const [message, setMessage] = useState('Vous êtes déconnecté. (pichu / pichu)');\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const validateForm = () => {\n    let newForm = form; // Validator username\n\n    if (form.username.value.length < 3) {\n      const errorMsg = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField = {\n        value: form.username.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          username: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.username.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          username: newField\n        }\n      };\n    } // Validator password\n\n\n    if (form.password.value.length < 4) {\n      const errorMsg = 'Votre mot de passe doit faire au moins 4 caractères de long.';\n      const newField = {\n        value: form.password.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          password: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.password.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          password: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.username.isValid && newForm.password.isValid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if (!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n\n        history.push('/pokemons');\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, message && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel grey lighten-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Identifiant\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    name: \"username\",\n    className: \"form-control\",\n    value: form.username.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }), form.username.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, form.username.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"Mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    value: form.password.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }), form.password.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, form.password.error))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/fred/React/pokemons/src/pages/Login.tsx"],"names":["React","useState","useHistory","AuthenticationService","Login","history","form","setForm","username","value","password","message","setMessage","handleInputChange","e","fieldName","target","name","fieldValue","newField","validateForm","newForm","length","errorMsg","error","isValid","handleSubmit","preventDefault","isFormValid","login","then","isAuthenticated","push"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pichu / pichu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 4) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 4 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}