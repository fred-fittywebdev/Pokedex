{"ast":null,"code":"var _jsxFileName = \"/home/fred/React/pokemons/src/components/PokemonForm.tsx\";\nimport React, { useState } from 'react';\nimport formatType from '../helpers/FormatType';\n\nconst PokemonForm = ({\n  pokemon\n}) => {\n  const [form, setForm] = useState({\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.name.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"Point de vie\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.hp.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"D\\xE9g\\xE2ts\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.cp.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Types\"), types.map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    className: \"filled-in\",\n    value: type,\n    checked: hasType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, type))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["/home/fred/React/pokemons/src/components/PokemonForm.tsx"],"names":["React","useState","formatType","PokemonForm","pokemon","form","setForm","name","value","isValid","hp","cp","types","hasType","type","includes","picture","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/FormatType';\n  \ntype Props = {\n  pokemon: Pokemon\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form = {\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\n\n  const [form, setForm] = useState<Form>({\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true },\n  })\n  \n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type:string): boolean => {\n    return form.types.value.includes(type)\n  }\n   \n  return (\n    <form>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n            </div>\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" type=\"text\" className=\"form-control\" value={form.name.value}></input>\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value}></input>\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value}></input>\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}