{"ast":null,"code":"var _jsxFileName = \"/home/fred/React/pokemons/src/components/PokemonForm.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport formatType from '../helpers/FormatType';\nimport PokemonService from '../services/PokemonService';\n\nconst PokemonForm = ({\n  pokemon\n}) => {\n  const history = useHistory();\n  const [form, setForm] = useState({\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      //Si l'utilisateur coche un type, on l'ajoute a la liste des types du pokemon\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      //si l'utilisateur décoche un type on le retire de la liste des types du pk\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    }\n  };\n\n  const validateForm = () => {\n    let newForm = form; //Validate Name\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est obligatoire (1 à 25 caractères pas de caractères, spéciaux).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } //validate hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les point de vie doivent être compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } //validate cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts doivent être compris entre 0 et 99.';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = type => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-floating halfway-fab waves-effect waves-light red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: deletePokemon,\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"delete\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }), form.name.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, form.name.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, \"Point de vie\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hp\",\n    name: \"hp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.hp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }), form.hp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, form.hp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"D\\xE9g\\xE2ts\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cp\",\n    name: \"cp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.cp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }), form.cp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, form.cp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Types\"), types.map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    className: \"filled-in\",\n    value: type,\n    disabled: !isTypesValid(type),\n    checked: hasType(type),\n    onChange: e => selectType(type, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 27\n    }\n  }, type))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["/home/fred/React/pokemons/src/components/PokemonForm.tsx"],"names":["React","useState","useHistory","formatType","PokemonService","PokemonForm","pokemon","history","form","setForm","name","value","isValid","hp","cp","types","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","handleSubmit","preventDefault","isFormValid","validateForm","updatePokemon","then","push","id","newForm","test","errorMsg","error","isTypesValid","length","deletePokemon","picture","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/FormatType';\nimport PokemonService from '../services/PokemonService';\n  \ntype Props = {\n  pokemon: Pokemon\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form = {\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\n\n  const history = useHistory()\n\n  const [form, setForm] = useState<Form>({\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true },\n  })\n\n  \n  \n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type:string): boolean => {\n    return form.types.value.includes(type)\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name\n    const fieldValue: string = e.target.value\n    const newField: Field = {[fieldName]: { value: fieldValue }}\n\n    setForm({... form, ...newField})\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked\n    let newField: Field\n\n    if(checked) {\n      //Si l'utilisateur coche un type, on l'ajoute a la liste des types du pokemon\n      const newTypes: string[] = form.types.value.concat([type])\n      newField = { value: newTypes }\n    }else {\n      //si l'utilisateur décoche un type on le retire de la liste des types du pk\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type)\n      newField = { value: newTypes }\n    }\n\n    setForm({...form, ...{ types: newField }})\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const isFormValid = validateForm()\n\n    if(isFormValid) {\n      pokemon.name = form.name.value\n      pokemon.hp = form.hp.value\n      pokemon.cp = form.cp.value\n      pokemon.types = form.types.value\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`))\n      }\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form\n\n    //Validate Name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est obligatoire (1 à 25 caractères pas de caractères, spéciaux).'\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ name: newField }}\n    }else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ name: newField }}\n    }\n\n    //validate hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les point de vie doivent être compris entre 0 et 999.'\n      const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ hp: newField }}\n    }else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ hp: newField }}\n    }\n\n    //validate cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts doivent être compris entre 0 et 99.'\n      const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ cp: newField }}\n    }else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ cp: newField }}\n    }\n\n    setForm(newForm)\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    if(form.types.value.length === 1 && hasType(type)) {\n      return false\n    }\n\n    if(form.types.value.length >= 3 && !hasType(type)) {\n      return false\n    }\n\n    return true\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`))\n  }\n   \n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light red\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}