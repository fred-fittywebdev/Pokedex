{"ast":null,"code":"import _objectSpread from\"/home/fred/React/pokemons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/home/fred/React/pokemons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/fred/React/pokemons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import AuthenticationService from'../services/AuthenticationService';var Login=function Login(){var history=useHistory();var _useState=useState({username:{value:''},password:{value:''}}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var _useState3=useState('Vous êtes déconnecté. (pichu / pichu)'),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var handleInputChange=function handleInputChange(e){var fieldName=e.target.name;var fieldValue=e.target.value;var newField=_defineProperty({},fieldName,{value:fieldValue});setForm(_objectSpread(_objectSpread({},form),newField));};var validateForm=function validateForm(){var newForm=form;// Validator username\nif(form.username.value.length<3){var errorMsg='Votre prénom doit faire au moins 3 caractères de long.';var newField={value:form.username.value,error:errorMsg,isValid:false};newForm=_objectSpread(_objectSpread({},newForm),{username:newField});}else{var _newField2={value:form.username.value,error:'',isValid:true};newForm=_objectSpread(_objectSpread({},newForm),{username:_newField2});}// Validator password\nif(form.password.value.length<4){var _errorMsg='Votre mot de passe doit faire au moins 4 caractères de long.';var _newField3={value:form.password.value,error:_errorMsg,isValid:false};newForm=_objectSpread(_objectSpread({},newForm),{password:_newField3});}else{var _newField4={value:form.password.value,error:'',isValid:true};newForm=_objectSpread(_objectSpread({},newForm),{password:_newField4});}setForm(newForm);return newForm.username.isValid&&newForm.password.isValid;};var handleSubmit=function handleSubmit(e){e.preventDefault();var isFormValid=validateForm();if(isFormValid){setMessage('👉 Tentative de connexion en cours ...');AuthenticationService.login(form.username.value,form.password.value).then(function(isAuthenticated){if(!isAuthenticated){setMessage('🔐 Identifiant ou mot de passe incorrect.');return;}history.push('/pokemons');});}};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){return handleSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col s12 m8 offset-m2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card hoverable\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stacked\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},message&&/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-panel grey lighten-5\"},message)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Identifiant\"),/*#__PURE__*/React.createElement(\"input\",{id:\"username\",type:\"text\",name:\"username\",className:\"form-control\",value:form.username.value,onChange:function onChange(e){return handleInputChange(e);}}),form.username.error&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.username.error)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Mot de passe\"),/*#__PURE__*/React.createElement(\"input\",{id:\"password\",type:\"password\",name:\"password\",className:\"form-control\",value:form.password.value,onChange:function onChange(e){return handleInputChange(e);}}),form.password.error&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.password.error))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-action center\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn\"},\"Valider\")))))));};export default Login;","map":{"version":3,"sources":["/home/fred/React/pokemons/src/pages/Login.tsx"],"names":["React","useState","useHistory","AuthenticationService","Login","history","username","value","password","form","setForm","message","setMessage","handleInputChange","e","fieldName","target","name","fieldValue","newField","validateForm","newForm","length","errorMsg","error","isValid","handleSubmit","preventDefault","isFormValid","login","then","isAuthenticated","push"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pichu / pichu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 4) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 4 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}