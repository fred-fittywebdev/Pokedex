{"ast":null,"code":"var _jsxFileName = \"/home/fred/React/pokemons/src/components/PokemonForm.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport formatType from '../helpers/FormatType';\nimport PokemonService from '../services/PokemonService';\n\nconst PokemonForm = ({\n  pokemon,\n  isEditForm\n}) => {\n  const history = useHistory();\n  const [form, setForm] = useState({\n    picture: {\n      value: pokemon.picture\n    },\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      //Si l'utilisateur coche un type, on l'ajoute a la liste des types du pokemon\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      //si l'utilisateur décoche un type on le retire de la liste des types du pk\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    }\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const validateForm = () => {\n    let newForm = form; //Validate url\n\n    if (isAddForm()) {\n      const start = \"http://assests.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg = \"L'url n'est pas valide\";\n        const newField = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false\n        };\n        newForm = { ...form,\n          ...{\n            picture: newField\n          }\n        };\n      } else {\n        const newField = {\n          value: form.picture.value,\n          error: '',\n          isValid: true\n        };\n        newForm = { ...form,\n          ...{\n            picture: newField\n          }\n        };\n      }\n    } //Validate Name\n\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est obligatoire (1 à 25 caractères pas de caractères, spéciaux).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } //validate hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les point de vie doivent être compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } //validate cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts doivent être compris entre 0 et 99.';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = type => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, isEditForm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-floating halfway-fab waves-effect waves-light red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: deletePokemon,\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"delete\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }), form.name.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, form.name.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }), form.name.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, form.name.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Point de vie\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hp\",\n    name: \"hp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.hp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }), form.hp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, form.hp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"D\\xE9g\\xE2ts\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cp\",\n    name: \"cp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.cp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }), form.cp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, form.cp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, \"Types\"), types.map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    className: \"filled-in\",\n    value: type,\n    disabled: !isTypesValid(type),\n    checked: hasType(type),\n    onChange: e => selectType(type, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 27\n    }\n  }, type))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["/home/fred/React/pokemons/src/components/PokemonForm.tsx"],"names":["React","useState","useHistory","formatType","PokemonService","PokemonForm","pokemon","isEditForm","history","form","setForm","picture","value","name","isValid","hp","cp","types","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","handleSubmit","preventDefault","isFormValid","validateForm","updatePokemon","then","push","id","isAddForm","newForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypesValid","length","deletePokemon","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/FormatType';\nimport PokemonService from '../services/PokemonService';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n  const history = useHistory()\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true },\n  })\n\n  \n  \n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type:string): boolean => {\n    return form.types.value.includes(type)\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name\n    const fieldValue: string = e.target.value\n    const newField: Field = {[fieldName]: { value: fieldValue }}\n\n    setForm({... form, ...newField})\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked\n    let newField: Field\n\n    if(checked) {\n      //Si l'utilisateur coche un type, on l'ajoute a la liste des types du pokemon\n      const newTypes: string[] = form.types.value.concat([type])\n      newField = { value: newTypes }\n    }else {\n      //si l'utilisateur décoche un type on le retire de la liste des types du pk\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type)\n      newField = { value: newTypes }\n    }\n\n    setForm({...form, ...{ types: newField }})\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const isFormValid = validateForm()\n\n    if(isFormValid) {\n      pokemon.name = form.name.value\n      pokemon.hp = form.hp.value\n      pokemon.cp = form.cp.value\n      pokemon.types = form.types.value\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`))\n      }\n  }\n\n  const isAddForm = () => {\n    return !isEditForm\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form\n\n    //Validate url\n    if(isAddForm()) {\n      const start = \"http://assests.pokemon.com/assets/cms2/img/pokedex/detail/\"\n      const end = \".png\"\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide\"\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false }\n        newForm = { ...form, ...{picture: newField} }\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true }\n        newForm = { ...form, ...{picture: newField} }\n      }\n    }\n\n    //Validate Name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est obligatoire (1 à 25 caractères pas de caractères, spéciaux).'\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ name: newField }}\n    }else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ name: newField }}\n    }\n\n    //validate hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les point de vie doivent être compris entre 0 et 999.'\n      const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ hp: newField }}\n    }else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ hp: newField }}\n    }\n\n    //validate cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts doivent être compris entre 0 et 99.'\n      const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ cp: newField }}\n    }else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ cp: newField }}\n    }\n\n    setForm(newForm)\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    if(form.types.value.length === 1 && hasType(type)) {\n      return false\n    }\n\n    if(form.types.value.length >= 3 && !hasType(type)) {\n      return false\n    }\n\n    return true\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`))\n  }\n   \n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light red\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error && \n                    <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}