{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon)\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  } // gestion des erreurs http grâce a catch\n\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}","map":{"version":3,"sources":["/home/fred/React/pokemons/src/services/PokemonService.ts"],"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","Object","keys","length","console"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;AAEhB,SAAXC,WAAW,GAAuB;AACvC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAEgB,SAAVE,UAAU,CAACC,EAAD,EAAoC;AACnD,WAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAEmB,SAAbM,aAAa,CAACC,OAAD,EAAqC;AACvD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AAC3DK,MAAAA,MAAM,EAAE,KADmD;AAE3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAFqD,KAAjD,CAAL,CAINX,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAMD;;AAEa,SAAPK,OAAO,CAACD,IAAD,EAAwB;AACpC,WAAOQ,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,MAAlB,KAA6B,CAApC;AACD,GA1BiC,CA4BlC;;;AACkB,SAAXb,WAAW,CAACD,KAAD,EAAqB;AACnCe,IAAAA,OAAO,CAACf,KAAR,CAAcA,KAAd;AACH;;AA/BiC","sourcesContent":["import Pokemon from \"../models/pokemon\";\n \nexport default class PokemonService {\n \n  static getPokemons(): Promise<Pokemon[]> {\n    return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error))\n  }\n \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error))\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon)\n    })\n    .then(response => response.json())\n    .catch(error => this.handleError(error))\n  }\n \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  // gestion des erreurs http grâce a catch\n  static handleError(error: Error): void {\n      console.error(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}